<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9200.15.1201.0018                                -->
<workbook source-platform='win' version='9.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='e1' inline='true' name='textscan.42328.549703460645' version='9.2'>
      <connection class='textscan' directory='//VBOXSVR/algo3-tp3' filename='e1.csv' password='' server=''>
        <relation name='e1#csv' table='[e1#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='batch' ordinal='0' />
            <column datatype='integer' name='c' ordinal='1' />
            <column datatype='integer' name='conflicts' ordinal='2' />
            <column datatype='integer' name='expected' ordinal='3' />
            <column datatype='string' name='family' ordinal='4' />
            <column datatype='integer' name='m' ordinal='5' />
            <column datatype='integer' name='method' ordinal='6' />
            <column datatype='integer' name='n' ordinal='7' />
            <column datatype='integer' name='run' ordinal='8' />
            <column datatype='string' name='timer' ordinal='9' />
            <column datatype='integer' name='unique_colors' ordinal='10' />
            <column datatype='boolean' name='unsolvable' ordinal='11' />
            <column datatype='integer' name='value' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>batch</remote-name>
            <remote-type>129</remote-type>
            <local-name>[batch]</local-name>
            <parent-name>[e1#csv]</parent-name>
            <remote-alias>batch</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c</remote-name>
            <remote-type>20</remote-type>
            <local-name>[c]</local-name>
            <parent-name>[e1#csv]</parent-name>
            <remote-alias>c</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>conflicts</remote-name>
            <remote-type>20</remote-type>
            <local-name>[conflicts]</local-name>
            <parent-name>[e1#csv]</parent-name>
            <remote-alias>conflicts</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>expected</remote-name>
            <remote-type>20</remote-type>
            <local-name>[expected]</local-name>
            <parent-name>[e1#csv]</parent-name>
            <remote-alias>expected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>family</remote-name>
            <remote-type>129</remote-type>
            <local-name>[family]</local-name>
            <parent-name>[e1#csv]</parent-name>
            <remote-alias>family</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>m</remote-name>
            <remote-type>20</remote-type>
            <local-name>[m]</local-name>
            <parent-name>[e1#csv]</parent-name>
            <remote-alias>m</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>method</remote-name>
            <remote-type>20</remote-type>
            <local-name>[method]</local-name>
            <parent-name>[e1#csv]</parent-name>
            <remote-alias>method</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>n</remote-name>
            <remote-type>20</remote-type>
            <local-name>[n]</local-name>
            <parent-name>[e1#csv]</parent-name>
            <remote-alias>n</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>run</remote-name>
            <remote-type>20</remote-type>
            <local-name>[run]</local-name>
            <parent-name>[e1#csv]</parent-name>
            <remote-alias>run</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timer</remote-name>
            <remote-type>129</remote-type>
            <local-name>[timer]</local-name>
            <parent-name>[e1#csv]</parent-name>
            <remote-alias>timer</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unique_colors</remote-name>
            <remote-type>20</remote-type>
            <local-name>[unique_colors]</local-name>
            <parent-name>[e1#csv]</parent-name>
            <remote-alias>unique_colors</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unsolvable</remote-name>
            <remote-type>11</remote-type>
            <local-name>[unsolvable]</local-name>
            <parent-name>[e1#csv]</parent-name>
            <remote-alias>unsolvable</remote-alias>
            <ordinal>11</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>20</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[e1#csv]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[e1#csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Batch' datatype='string' name='[batch]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='C' datatype='integer' name='[c]' role='dimension' type='ordinal' />
      <column caption='Conflicts' datatype='integer' name='[conflicts]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Expected' datatype='integer' name='[expected]' role='dimension' type='ordinal' />
      <column caption='Familia' datatype='string' name='[family]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;bbtree&quot;' value='Árbol Binario' />
          <alias key='&quot;bipartite&quot;' value='Bipartito' />
          <alias key='&quot;complete&quot;' value='Completo' />
          <alias key='&quot;cycle&quot;' value='Ciclo' />
          <alias key='&quot;star&quot;' value='Estrella' />
          <alias key='&quot;wheel&quot;' value='Rueda' />
        </aliases>
      </column>
      <column aggregation='Sum' caption='M' datatype='integer' name='[m]' role='dimension' type='quantitative' />
      <column aggregation='Sum' caption='Method' datatype='integer' name='[method]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='N' datatype='integer' name='[n]' role='dimension' type='quantitative' />
      <column aggregation='Sum' caption='Run' datatype='integer' name='[run]' role='dimension' type='ordinal' />
      <column caption='Timer' datatype='string' name='[timer]' role='dimension' type='nominal' />
      <column caption='Unique Colors' datatype='integer' name='[unique_colors]' role='measure' type='quantitative' />
      <column caption='Unsolvable' datatype='boolean' name='[unsolvable]' role='dimension' type='nominal' />
      <column caption='Value' datatype='integer' name='[value]' role='measure' type='quantitative' />
      <column-instance column='[family]' derivation='None' name='[none:family:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.482323' measure-ordering='alphabetic' measure-percentage='0.482323' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:family:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;bbtree&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;complete&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;wheel&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;star&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;cycle&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;bipartite&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Complejidad en función de M'>
      <table>
        <view>
          <datasources>
            <datasource caption='e1' name='textscan.42328.549703460645' />
          </datasources>
          <datasource-dependencies datasource='textscan.42328.549703460645'>
            <column caption='AVG([Value]/([N]+[M]))' datatype='real' name='[Calculation_0901210090420643]' role='measure' type='quantitative' user:unnamed='Complejidad en función de M'>
              <calculation class='tableau' formula='AVG([value]/([n]+[m]))' />
            </column>
            <column caption='Familia' datatype='string' name='[family]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;bbtree&quot;' value='Árbol Binario' />
                <alias key='&quot;bipartite&quot;' value='Bipartito' />
                <alias key='&quot;complete&quot;' value='Completo' />
                <alias key='&quot;cycle&quot;' value='Ciclo' />
                <alias key='&quot;star&quot;' value='Estrella' />
                <alias key='&quot;wheel&quot;' value='Rueda' />
              </aliases>
            </column>
            <column aggregation='Sum' caption='M' datatype='integer' name='[m]' role='dimension' type='quantitative' />
            <column aggregation='Sum' caption='N' datatype='integer' name='[n]' role='dimension' type='quantitative' />
            <column-instance column='[family]' derivation='None' name='[none:family:nk]' pivot='key' type='nominal' />
            <column-instance column='[m]' derivation='None' name='[none:m:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0901210090420643]' derivation='User' name='[usr:Calculation_0901210090420643:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='integer' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42328.549703460645].[none:family:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:family:nk]' member='&quot;bipartite&quot;' />
              <groupfilter function='member' level='[none:family:nk]' member='&quot;complete&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[textscan.42328.549703460645].[none:m:qk]' included-values='in-range'>
            <min>10</min>
            <max>465</max>
          </filter>
          <slices>
            <column>[textscan.42328.549703460645].[none:family:nk]</column>
            <column>[textscan.42328.549703460645].[none:m:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.42328.549703460645].[usr:Calculation_0901210090420643:qk]' scope='rows' value='Tiempo promedio sobre N + M' />
            <format attr='subtitle' class='0' field='[textscan.42328.549703460645].[usr:Calculation_0901210090420643:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42328.549703460645].[usr:Calculation_0901210090420643:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.42328.549703460645].[none:family:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42328.549703460645].[usr:Calculation_0901210090420643:qk]</rows>
        <cols>[textscan.42328.549703460645].[none:m:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Complejidad en función de M (Completo)'>
      <table>
        <view>
          <datasources>
            <datasource caption='e1' name='textscan.42328.549703460645' />
          </datasources>
          <datasource-dependencies datasource='textscan.42328.549703460645'>
            <column caption='AVG([Value]/([N]+[M]))' datatype='real' name='[Calculation_0901210090420643]' role='measure' type='quantitative' user:unnamed='Complejidad en función de M'>
              <calculation class='tableau' formula='AVG([value]/([n]+[m]))' />
            </column>
            <column caption='Familia' datatype='string' name='[family]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;bbtree&quot;' value='Árbol Binario' />
                <alias key='&quot;bipartite&quot;' value='Bipartito' />
                <alias key='&quot;complete&quot;' value='Completo' />
                <alias key='&quot;cycle&quot;' value='Ciclo' />
                <alias key='&quot;star&quot;' value='Estrella' />
                <alias key='&quot;wheel&quot;' value='Rueda' />
              </aliases>
            </column>
            <column aggregation='Sum' caption='M' datatype='integer' name='[m]' role='dimension' type='quantitative' />
            <column aggregation='Sum' caption='N' datatype='integer' name='[n]' role='dimension' type='quantitative' />
            <column-instance column='[family]' derivation='None' name='[none:family:nk]' pivot='key' type='nominal' />
            <column-instance column='[m]' derivation='None' name='[none:m:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0901210090420643]' derivation='User' name='[usr:Calculation_0901210090420643:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='integer' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42328.549703460645].[none:family:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:family:nk]' member='&quot;bbtree&quot;' />
              <groupfilter function='member' level='[none:family:nk]' member='&quot;bipartite&quot;' />
              <groupfilter from='&quot;cycle&quot;' function='range' level='[none:family:nk]' to='&quot;wheel&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[textscan.42328.549703460645].[none:m:qk]' included-values='in-range'>
            <min>8</min>
            <max>44</max>
          </filter>
          <slices>
            <column>[textscan.42328.549703460645].[none:family:nk]</column>
            <column>[textscan.42328.549703460645].[none:m:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.42328.549703460645].[usr:Calculation_0901210090420643:qk]' scope='rows' value='Tiempo promedio sobre N + M' />
            <format attr='subtitle' class='0' field='[textscan.42328.549703460645].[usr:Calculation_0901210090420643:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42328.549703460645].[usr:Calculation_0901210090420643:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.42328.549703460645].[none:family:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42328.549703460645].[usr:Calculation_0901210090420643:qk]</rows>
        <cols>[textscan.42328.549703460645].[none:m:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Complejidad en función de N'>
      <table>
        <view>
          <datasources>
            <datasource caption='e1' name='textscan.42328.549703460645' />
          </datasources>
          <datasource-dependencies datasource='textscan.42328.549703460645'>
            <column caption='AVG([Value]/([N] + [M]))' datatype='real' name='[Calculation_8461210085721705]' role='measure' type='quantitative' user:unnamed='Sheet 1'>
              <calculation class='tableau' formula='AVG([value]/([n] + [m]))' />
            </column>
            <column caption='Familia' datatype='string' name='[family]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;bbtree&quot;' value='Árbol Binario' />
                <alias key='&quot;bipartite&quot;' value='Bipartito' />
                <alias key='&quot;complete&quot;' value='Completo' />
                <alias key='&quot;cycle&quot;' value='Ciclo' />
                <alias key='&quot;star&quot;' value='Estrella' />
                <alias key='&quot;wheel&quot;' value='Rueda' />
              </aliases>
            </column>
            <column aggregation='Sum' caption='M' datatype='integer' name='[m]' role='dimension' type='quantitative' />
            <column aggregation='Sum' caption='Method' datatype='integer' name='[method]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='N' datatype='integer' name='[n]' role='dimension' type='quantitative' />
            <column-instance column='[family]' derivation='None' name='[none:family:nk]' pivot='key' type='nominal' />
            <column-instance column='[method]' derivation='None' name='[none:method:ok]' pivot='key' type='ordinal' />
            <column-instance column='[n]' derivation='None' name='[none:n:qk]' pivot='key' type='quantitative' />
            <column-instance column='[timer]' derivation='None' name='[none:timer:nk]' pivot='key' type='nominal' />
            <column caption='Timer' datatype='string' name='[timer]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_8461210085721705]' derivation='User' name='[usr:Calculation_8461210085721705:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='integer' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42328.549703460645].[none:method:ok]'>
            <groupfilter function='member' level='[none:method:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[textscan.42328.549703460645].[none:n:qk]' included-values='in-range'>
            <max>44</max>
          </filter>
          <filter class='categorical' column='[textscan.42328.549703460645].[none:timer:nk]'>
            <groupfilter function='member' level='[none:timer:nk]' member='&quot;Exercise 1 Timer&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42328.549703460645].[none:timer:nk]</column>
            <column>[textscan.42328.549703460645].[none:method:ok]</column>
            <column>[textscan.42328.549703460645].[none:n:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.42328.549703460645].[usr:Calculation_8461210085721705:qk]' scope='rows' value='Tiempo promedio sobre N + M' />
            <format attr='subtitle' class='0' field='[textscan.42328.549703460645].[usr:Calculation_8461210085721705:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42328.549703460645].[usr:Calculation_8461210085721705:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.42328.549703460645].[none:family:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42328.549703460645].[usr:Calculation_8461210085721705:qk]</rows>
        <cols>[textscan.42328.549703460645].[none:n:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Gráficos del ejercicio 1'>
      <style />
      <size maxheight='520' maxwidth='810' minheight='520' minwidth='810' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='12' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='20' h='6153' id='11' is-fixed='true' type='title' w='100000' x='0' y='0' />
            <zone h='93078' id='10' type='layout-basic' w='100000' x='0' y='6153'>
              <zone h='86924' id='5' param='horz' type='layout-flow' w='100000' x='0' y='6153'>
                <zone h='86924' id='3' type='layout-basic' w='99506' x='0' y='6153'>
                  <zone h='43462' id='1' name='Complejidad en función de N' show-title='true' w='99506' x='0' y='6153' />
                  <zone h='43462' id='8' name='Complejidad en función de M' show-title='true' w='49755' x='0' y='49615' />
                  <zone h='43462' id='9' name='Complejidad en función de M (Completo)' show-title='true' w='49751' x='49755' y='49615' />
                </zone>
              </zone>
              <zone h='6154' id='7' type='layout-flow' w='100000' x='0' y='93077'>
                <zone h='6154' id='6' name='Complejidad en función de N' pane-specification-id='0' param='[textscan.42328.549703460645].[none:family:nk]' type='color' w='100000' x='0' y='93077' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='28'>
    <window class='worksheet' name='Complejidad en función de N'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42328.549703460645].[none:family:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[textscan.42328.549703460645].[none:c:ok]</field>
            <field>[textscan.42328.549703460645].[none:family:nk]</field>
            <field>[textscan.42328.549703460645].[none:m:ok]</field>
            <field>[textscan.42328.549703460645].[none:method:ok]</field>
            <field>[textscan.42328.549703460645].[none:n:ok]</field>
            <field>[textscan.42328.549703460645].[none:n:qk]</field>
            <field>[textscan.42328.549703460645].[none:timer:nk]</field>
            <field>[textscan.42328.549703460645].[none:unsolvable:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Complejidad en función de M'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42328.549703460645].[none:family:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[textscan.42328.549703460645].[none:family:nk]</field>
            <field>[textscan.42328.549703460645].[none:m:ok]</field>
            <field>[textscan.42328.549703460645].[none:m:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Complejidad en función de M (Completo)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42328.549703460645].[none:family:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[textscan.42328.549703460645].[none:family:nk]</field>
            <field>[textscan.42328.549703460645].[none:m:ok]</field>
            <field>[textscan.42328.549703460645].[none:m:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Gráficos del ejercicio 1'>
      <viewpoints>
        <viewpoint name='Complejidad en función de M'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Complejidad en función de M (Completo)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Complejidad en función de N'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[textscan.42328.549703460645].[none:family:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Complejidad en función de N' width='192'>
      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
      QESL4QI1AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Complejidad en función de M' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Complejidad en función de M (Completo)' width='192'>
      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
      H1iStwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Gráficos del ejercicio 1' width='192'>
      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
      u62VABaJAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
