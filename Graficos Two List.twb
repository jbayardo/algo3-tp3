<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='9.0' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 9000.15.0527.1215                                -->
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='e1' inline='true' name='textscan.42328.549703460645' version='9.0'>
      <connection class='textscan' directory='//VBOXSVR/algo3-tp3' filename='e1.csv' password='' server=''>
        <relation name='e1#csv' table='[e1#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='batch' ordinal='0' />
            <column datatype='integer' name='c' ordinal='1' />
            <column datatype='integer' name='conflicts' ordinal='2' />
            <column datatype='integer' name='expected' ordinal='3' />
            <column datatype='string' name='family' ordinal='4' />
            <column datatype='integer' name='m' ordinal='5' />
            <column datatype='integer' name='method' ordinal='6' />
            <column datatype='integer' name='n' ordinal='7' />
            <column datatype='integer' name='run' ordinal='8' />
            <column datatype='string' name='timer' ordinal='9' />
            <column datatype='integer' name='unique_colors' ordinal='10' />
            <column datatype='boolean' name='unsolvable' ordinal='11' />
            <column datatype='integer' name='value' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>batch</remote-name>
            <remote-type>129</remote-type>
            <local-name>[batch]</local-name>
            <parent-name>[e1#csv]</parent-name>
            <remote-alias>batch</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c</remote-name>
            <remote-type>20</remote-type>
            <local-name>[c]</local-name>
            <parent-name>[e1#csv]</parent-name>
            <remote-alias>c</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>conflicts</remote-name>
            <remote-type>20</remote-type>
            <local-name>[conflicts]</local-name>
            <parent-name>[e1#csv]</parent-name>
            <remote-alias>conflicts</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>expected</remote-name>
            <remote-type>20</remote-type>
            <local-name>[expected]</local-name>
            <parent-name>[e1#csv]</parent-name>
            <remote-alias>expected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>family</remote-name>
            <remote-type>129</remote-type>
            <local-name>[family]</local-name>
            <parent-name>[e1#csv]</parent-name>
            <remote-alias>family</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>m</remote-name>
            <remote-type>20</remote-type>
            <local-name>[m]</local-name>
            <parent-name>[e1#csv]</parent-name>
            <remote-alias>m</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>method</remote-name>
            <remote-type>20</remote-type>
            <local-name>[method]</local-name>
            <parent-name>[e1#csv]</parent-name>
            <remote-alias>method</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>n</remote-name>
            <remote-type>20</remote-type>
            <local-name>[n]</local-name>
            <parent-name>[e1#csv]</parent-name>
            <remote-alias>n</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>run</remote-name>
            <remote-type>20</remote-type>
            <local-name>[run]</local-name>
            <parent-name>[e1#csv]</parent-name>
            <remote-alias>run</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timer</remote-name>
            <remote-type>129</remote-type>
            <local-name>[timer]</local-name>
            <parent-name>[e1#csv]</parent-name>
            <remote-alias>timer</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unique_colors</remote-name>
            <remote-type>20</remote-type>
            <local-name>[unique_colors]</local-name>
            <parent-name>[e1#csv]</parent-name>
            <remote-alias>unique_colors</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unsolvable</remote-name>
            <remote-type>11</remote-type>
            <local-name>[unsolvable]</local-name>
            <parent-name>[e1#csv]</parent-name>
            <remote-alias>unsolvable</remote-alias>
            <ordinal>11</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>20</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[e1#csv]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[e1#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Batch' datatype='string' name='[batch]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' caption='C' datatype='integer' name='[c]' role='dimension' type='ordinal'>
      </column>
      <column caption='Conflicts' datatype='integer' name='[conflicts]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Expected' datatype='integer' name='[expected]' role='dimension' type='ordinal'>
      </column>
      <column caption='Familia' datatype='string' name='[family]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;bbtree&quot;' value='Árbol Binario' />
          <alias key='&quot;bipartite&quot;' value='Bipartito' />
          <alias key='&quot;complete&quot;' value='Completo' />
          <alias key='&quot;cycle&quot;' value='Ciclo' />
          <alias key='&quot;star&quot;' value='Estrella' />
          <alias key='&quot;wheel&quot;' value='Rueda' />
        </aliases>
      </column>
      <column aggregation='Sum' caption='M' datatype='integer' name='[m]' role='dimension' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Method' datatype='integer' name='[method]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' caption='N' datatype='integer' name='[n]' role='dimension' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Run' datatype='integer' name='[run]' role='dimension' type='ordinal'>
      </column>
      <column caption='Timer' datatype='string' name='[timer]' role='dimension' type='nominal'>
      </column>
      <column caption='Unique Colors' datatype='integer' name='[unique_colors]' role='measure' type='quantitative'>
      </column>
      <column caption='Unsolvable' datatype='boolean' name='[unsolvable]' role='dimension' type='nominal'>
      </column>
      <column caption='Value' datatype='integer' name='[value]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[family]' derivation='None' name='[none:family:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.482323' measure-ordering='alphabetic' measure-percentage='0.482323' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:family:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;bbtree&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;complete&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;wheel&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;star&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;cycle&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;bipartite&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Complejidad en función de M'>
      <table>
        <view>
          <datasources>
            <datasource caption='e1' name='textscan.42328.549703460645' />
          </datasources>
          <datasource-dependencies datasource='textscan.42328.549703460645'>
            <column caption='AVG([Value]/([N]+[M]))' datatype='real' name='[Calculation_0901210090420643]' role='measure' type='quantitative' user:unnamed='Complejidad en función de M'>
              <calculation class='tableau' formula='AVG([value]/([n]+[m]))' />
            </column>
            <column caption='Familia' datatype='string' name='[family]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;bbtree&quot;' value='Árbol Binario' />
                <alias key='&quot;bipartite&quot;' value='Bipartito' />
                <alias key='&quot;complete&quot;' value='Completo' />
                <alias key='&quot;cycle&quot;' value='Ciclo' />
                <alias key='&quot;star&quot;' value='Estrella' />
                <alias key='&quot;wheel&quot;' value='Rueda' />
              </aliases>
            </column>
            <column aggregation='Sum' caption='M' datatype='integer' name='[m]' role='dimension' type='quantitative'>
            </column>
            <column-instance column='[family]' derivation='None' name='[none:family:nk]' pivot='key' type='nominal' />
            <column-instance column='[m]' derivation='None' name='[none:m:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0901210090420643]' derivation='User' name='[usr:Calculation_0901210090420643:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42328.549703460645].[none:family:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:family:nk]' member='&quot;bipartite&quot;' />
              <groupfilter function='member' level='[none:family:nk]' member='&quot;complete&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[textscan.42328.549703460645].[none:m:qk]' included-values='in-range'>
            <min>10</min>
            <max>465</max>
          </filter>
          <slices>
            <column>[textscan.42328.549703460645].[none:family:nk]</column>
            <column>[textscan.42328.549703460645].[none:m:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.42328.549703460645].[usr:Calculation_0901210090420643:qk]' scope='rows' value='Tiempo promedio sobre N + M' />
            <format attr='subtitle' class='0' field='[textscan.42328.549703460645].[usr:Calculation_0901210090420643:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42328.549703460645].[usr:Calculation_0901210090420643:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.42328.549703460645].[none:family:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42328.549703460645].[usr:Calculation_0901210090420643:qk]</rows>
        <cols>[textscan.42328.549703460645].[none:m:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Complejidad en función de M (Completo)'>
      <table>
        <view>
          <datasources>
            <datasource caption='e1' name='textscan.42328.549703460645' />
          </datasources>
          <datasource-dependencies datasource='textscan.42328.549703460645'>
            <column caption='AVG([Value]/([N]+[M]))' datatype='real' name='[Calculation_0901210090420643]' role='measure' type='quantitative' user:unnamed='Complejidad en función de M'>
              <calculation class='tableau' formula='AVG([value]/([n]+[m]))' />
            </column>
            <column caption='Familia' datatype='string' name='[family]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;bbtree&quot;' value='Árbol Binario' />
                <alias key='&quot;bipartite&quot;' value='Bipartito' />
                <alias key='&quot;complete&quot;' value='Completo' />
                <alias key='&quot;cycle&quot;' value='Ciclo' />
                <alias key='&quot;star&quot;' value='Estrella' />
                <alias key='&quot;wheel&quot;' value='Rueda' />
              </aliases>
            </column>
            <column aggregation='Sum' caption='M' datatype='integer' name='[m]' role='dimension' type='quantitative'>
            </column>
            <column-instance column='[family]' derivation='None' name='[none:family:nk]' pivot='key' type='nominal' />
            <column-instance column='[m]' derivation='None' name='[none:m:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0901210090420643]' derivation='User' name='[usr:Calculation_0901210090420643:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42328.549703460645].[none:family:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:family:nk]' member='&quot;bbtree&quot;' />
              <groupfilter function='member' level='[none:family:nk]' member='&quot;bipartite&quot;' />
              <groupfilter from='&quot;cycle&quot;' function='range' level='[none:family:nk]' to='&quot;wheel&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[textscan.42328.549703460645].[none:m:qk]' included-values='in-range'>
            <min>8</min>
            <max>44</max>
          </filter>
          <slices>
            <column>[textscan.42328.549703460645].[none:family:nk]</column>
            <column>[textscan.42328.549703460645].[none:m:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.42328.549703460645].[usr:Calculation_0901210090420643:qk]' scope='rows' value='Tiempo promedio sobre N + M' />
            <format attr='subtitle' class='0' field='[textscan.42328.549703460645].[usr:Calculation_0901210090420643:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42328.549703460645].[usr:Calculation_0901210090420643:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.42328.549703460645].[none:family:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42328.549703460645].[usr:Calculation_0901210090420643:qk]</rows>
        <cols>[textscan.42328.549703460645].[none:m:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Complejidad en función de N'>
      <table>
        <view>
          <datasources>
            <datasource caption='e1' name='textscan.42328.549703460645' />
          </datasources>
          <datasource-dependencies datasource='textscan.42328.549703460645'>
            <column caption='AVG([Value]/([N] + [M]))' datatype='real' name='[Calculation_8461210085721705]' role='measure' type='quantitative' user:unnamed='Sheet 1'>
              <calculation class='tableau' formula='AVG([value]/([n] + [m]))' />
            </column>
            <column caption='Familia' datatype='string' name='[family]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;bbtree&quot;' value='Árbol Binario' />
                <alias key='&quot;bipartite&quot;' value='Bipartito' />
                <alias key='&quot;complete&quot;' value='Completo' />
                <alias key='&quot;cycle&quot;' value='Ciclo' />
                <alias key='&quot;star&quot;' value='Estrella' />
                <alias key='&quot;wheel&quot;' value='Rueda' />
              </aliases>
            </column>
            <column aggregation='Sum' caption='Method' datatype='integer' name='[method]' role='dimension' type='ordinal'>
            </column>
            <column aggregation='Sum' caption='N' datatype='integer' name='[n]' role='dimension' type='quantitative'>
            </column>
            <column-instance column='[family]' derivation='None' name='[none:family:nk]' pivot='key' type='nominal' />
            <column-instance column='[method]' derivation='None' name='[none:method:ok]' pivot='key' type='ordinal' />
            <column-instance column='[n]' derivation='None' name='[none:n:qk]' pivot='key' type='quantitative' />
            <column-instance column='[timer]' derivation='None' name='[none:timer:nk]' pivot='key' type='nominal' />
            <column caption='Timer' datatype='string' name='[timer]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_8461210085721705]' derivation='User' name='[usr:Calculation_8461210085721705:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42328.549703460645].[none:method:ok]'>
            <groupfilter function='member' level='[none:method:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[textscan.42328.549703460645].[none:n:qk]' included-values='in-range'>
            <max>44</max>
          </filter>
          <filter class='categorical' column='[textscan.42328.549703460645].[none:timer:nk]'>
            <groupfilter function='member' level='[none:timer:nk]' member='&quot;Exercise 1 Timer&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42328.549703460645].[none:timer:nk]</column>
            <column>[textscan.42328.549703460645].[none:method:ok]</column>
            <column>[textscan.42328.549703460645].[none:n:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.42328.549703460645].[usr:Calculation_8461210085721705:qk]' scope='rows' value='Tiempo promedio sobre N + M' />
            <format attr='subtitle' class='0' field='[textscan.42328.549703460645].[usr:Calculation_8461210085721705:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42328.549703460645].[usr:Calculation_8461210085721705:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.42328.549703460645].[none:family:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42328.549703460645].[usr:Calculation_8461210085721705:qk]</rows>
        <cols>[textscan.42328.549703460645].[none:n:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Complejidad'>
      <style>
      </style>
      <size maxheight='485' maxwidth='810' minheight='485' minwidth='810' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='93846' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='93846' id='3' type='layout-basic' w='99506' x='0' y='0'>
              <zone h='46923' id='1' name='Complejidad en función de N' show-title='true' w='99506' x='0' y='0'>
              </zone>
              <zone h='46923' id='8' name='Complejidad en función de M' show-title='true' w='49755' x='0' y='46923'>
              </zone>
              <zone h='46923' id='9' name='Complejidad en función de M (Completo)' show-title='true' w='49751' x='49755' y='46923'>
              </zone>
            </zone>
          </zone>
          <zone h='6154' id='7' type='layout-flow' w='100000' x='0' y='93846'>
            <zone h='6154' id='6' name='Complejidad en función de N' pane-specification-id='0' param='[textscan.42328.549703460645].[none:family:nk]' type='color' w='100000' x='0' y='93846'>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='28' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Complejidad en función de N'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42328.549703460645].[none:family:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.42328.549703460645].[none:c:ok]</field>
          <field>[textscan.42328.549703460645].[none:family:nk]</field>
          <field>[textscan.42328.549703460645].[none:m:ok]</field>
          <field>[textscan.42328.549703460645].[none:method:ok]</field>
          <field>[textscan.42328.549703460645].[none:n:ok]</field>
          <field>[textscan.42328.549703460645].[none:n:qk]</field>
          <field>[textscan.42328.549703460645].[none:timer:nk]</field>
          <field>[textscan.42328.549703460645].[none:unsolvable:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Complejidad en función de M'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42328.549703460645].[none:family:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.42328.549703460645].[none:family:nk]</field>
          <field>[textscan.42328.549703460645].[none:m:ok]</field>
          <field>[textscan.42328.549703460645].[none:m:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Complejidad en función de M (Completo)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42328.549703460645].[none:family:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.42328.549703460645].[none:family:nk]</field>
          <field>[textscan.42328.549703460645].[none:m:ok]</field>
          <field>[textscan.42328.549703460645].[none:m:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='1' name='Complejidad'>
      <zones>
        <zone name='Complejidad en función de N'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[textscan.42328.549703460645].[none:family:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Complejidad en función de M'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Complejidad en función de M (Completo)'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Complejidad en función de N' pane-specification-id='0' param='[textscan.42328.549703460645].[none:family:nk]' type='color' />
      </zones>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Complejidad en función de N' width='192'>
      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
      QESL4QI1AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Complejidad en función de M' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Complejidad en función de M (Completo)' width='192'>
      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
      H1iStwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Complejidad' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
